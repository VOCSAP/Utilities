*&---------------------------------------------------------------------*
*& Report  ZLOCAL_FIND_STRUCT_BY_COMP
*&
*&---------------------------------------------------------------------*
*&
*& Permet de trouver une structure contenant uniquement les champs saisis
*&---------------------------------------------------------------------*

REPORT zlocal_find_struct_by_comp.

TABLES : dd03l.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-tb1.

" Liste des Composants
SELECT-OPTIONS : s_comp FOR dd03l-fieldname OBLIGATORY.

" Liste des noms
SELECT-OPTIONS : s_tab  FOR dd03l-tabname.

SELECTION-SCREEN END OF BLOCK b1.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-tb2.

" Mode Strict
PARAMETERS : p_strict TYPE flag DEFAULT 'X'.

SELECTION-SCREEN END OF BLOCK b2.

START-OF-SELECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***
  TYPES :
    BEGIN OF ty_tabname_line,
      tabname TYPE dd03l-tabname,
    END OF   ty_tabname_line.

  TYPES : ty_t_tabname_line TYPE STANDARD TABLE OF ty_tabname_line
                  WITH NON-UNIQUE KEY primary_key COMPONENTS tabname.

  TYPES :
    BEGIN OF ty_dd03l,
      tabname   TYPE dd03l-tabname,
      fieldname TYPE dd03l-fieldname,
    END OF   ty_dd03l.

  TYPES : ty_t_dd03l TYPE SORTED TABLE OF ty_dd03l
                      WITH NON-UNIQUE KEY primary_key COMPONENTS tabname fieldname.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_dd03l        TYPE ty_t_dd03l,
    lt_tabname_line TYPE ty_t_tabname_line.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_count            TYPE i,
    lv_eligible         TYPE flag,
    lv_component_number TYPE i.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  " -----------------------------------------------------------
  " Contrôle pré-traitement
  " -----------------------------------------------------------

  " Recherche présence de critère "pattern"
  READ TABLE s_comp WITH KEY option = 'CP'
                TRANSPORTING NO FIELDS.
  IF sy-subrc EQ 0.
    " Recherche pattern
    ""  --> Force sans le mode Strict
    CLEAR : p_strict.

  ENDIF.

  " -----------------------------------------------------------
  " Récupération des structures
  " -----------------------------------------------------------

  IF p_strict EQ abap_true.
    " Mode "Strict"
    lv_component_number = lines( s_comp[] ).

    SELECT DISTINCT tabname FROM dd03l
                           WHERE tabname   IN @s_tab[]
                             AND fieldname IN @s_comp[]
                             AND position  LE @lv_component_number
                      INTO TABLE @lt_dd03l.

  ELSE.
    " Mode "tolérant"
    SELECT DISTINCT tabname FROM dd03l
                           WHERE tabname   IN @s_tab[]
                             AND fieldname IN @s_comp[]
                      INTO TABLE @lt_dd03l.

  ENDIF.
  IF sy-subrc EQ 0.
    SELECT tabname, fieldname FROM dd03l
                FOR ALL ENTRIES IN @lt_dd03l
                             WHERE tabname EQ @lt_dd03l-tabname
                        INTO TABLE @lt_dd03l.

  ENDIF.
  IF sy-subrc NE 0.
    RETURN.

  ENDIF.

  " -----------------------------------------------------------
  " Affichage du résultat
  " -----------------------------------------------------------

  lt_tabname_line = CORRESPONDING #( lt_dd03l MAPPING tabname = tabname ).
  SORT lt_tabname_line BY tabname. DELETE ADJACENT DUPLICATES FROM lt_tabname_line.

  LOOP AT lt_tabname_line ASSIGNING FIELD-SYMBOL(<lfs_s_tabname>).

    CLEAR : lv_count.

    " Récupération position première itération
    READ TABLE lt_dd03l WITH KEY tabname = <lfs_s_tabname>-tabname
                    TRANSPORTING NO FIELDS BINARY SEARCH.
    IF sy-subrc NE 0.
      " Aucune correspondance
      ""  --> Suppression de l'entrée
      DELETE lt_tabname_line USING KEY loop_key.

      ""  --> Passe à l'itération suivante
      CONTINUE.

    ENDIF.

    " Parcours chaque champ de la structure
    LOOP AT lt_dd03l ASSIGNING FIELD-SYMBOL(<lfs_s_dd03l>)
                          FROM sy-tabix.

      IF <lfs_s_dd03l>-tabname NE <lfs_s_tabname>-tabname.
        " On change de structure
        ""  --> Arrêt de la boucle
        EXIT.

      ENDIF.

      IF <lfs_s_dd03l>-fieldname IN s_comp[].
        " Champ présent dans la liste
        ""  --> Initialisation flag éligible
        lv_eligible = abap_true.
        ADD 1 TO lv_count.

      ELSE.
        " Champ non présent
        ""  --> Initialisation indicateur flag non éligible
        lv_eligible = abap_false.

        ""  --> Arrêt de la boucle
        EXIT.

      ENDIF.

    ENDLOOP.

    IF  lv_eligible EQ abap_true
    AND lv_count    EQ lv_component_number.
      " Structure / Table eligible
      ""  --> Conserve l'entrée

    ELSE.
      " Structure / Table ne correspond pas intégralement
      IF p_strict EQ abap_true.
        " Mode Strict
        ""  --> Supprime l'entrée
        DELETE lt_dd03l WHERE tabname EQ <lfs_s_tabname>-tabname.
        DELETE lt_tabname_line USING KEY loop_key.
        CONTINUE.

      ENDIF.

    ENDIF.

  ENDLOOP.

  " -----------------------------------------------------------
  " Affichage du résultat
  " -----------------------------------------------------------

  TRY.
      " Génération instance SALV
      cl_salv_table=>factory(
        EXPORTING
          list_display   = sy-batch
        IMPORTING
          r_salv_table   = DATA(lo_salv_table)
        CHANGING
          t_table        = lt_tabname_line
      ).

      " Affichage du résultat
      lo_salv_table->display( ).

    CATCH cx_salv_msg.

  ENDTRY.