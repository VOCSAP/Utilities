<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZCL_SALV_UTILITIES">
 <CLAS CLSNAME="ZCL_SALV_UTILITIES" VERSION="1" LANGU="F" DESCRIPT="SALV - Classe utilitaire" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <method CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="FIELDCATALOG_LVC_TO_SALV" VERSION="1" LANGU="F" DESCRIPT="FieldCatalog LVC -&gt; SALV" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="FIELDCATALOG_LVC_TO_SALV" SCONAME="IT_FIELDCATALOG" VERSION="1" LANGU="F" DESCRIPT="Catalogue pour contrôle List Viewer" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LVC_T_FCAT"/>
   <parameter CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="FIELDCATALOG_LVC_TO_SALV" SCONAME="CO_SALV_TABLE" VERSION="1" LANGU="F" DESCRIPT="Basis Class for Simple Tables" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_SALV_TABLE"/>
   <source>METHOD fieldcatalog_lvc_to_salv.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_column  TYPE REF TO cl_salv_column,
    lo_columns TYPE REF TO cl_salv_columns.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Application du FC à l&apos;instance SALV
      &quot; -----------------------------------------------------------

      &quot; Récupération instance des Colonnes
      lo_columns = co_salv_table-&gt;get_columns( ).

      LOOP AT it_fieldcatalog ASSIGNING FIELD-SYMBOL(&lt;lfs_s_fieldcatalog&gt;).

        TRY.
            &quot; Récupération de la Colonne
            lo_column = lo_columns-&gt;get_column( &lt;lfs_s_fieldcatalog&gt;-fieldname ).

            &quot; Modification position
            lo_columns-&gt;set_column_position(
              position   = &lt;lfs_s_fieldcatalog&gt;-col_pos
              columnname = &lt;lfs_s_fieldcatalog&gt;-fieldname
            ).

            &quot; Modification propriété de la Colonne
            lo_column-&gt;set_ddic_reference( VALUE #(
                field = &lt;lfs_s_fieldcatalog&gt;-ref_field
                table = &lt;lfs_s_fieldcatalog&gt;-ref_table
              )
            ).
            lo_column-&gt;set_row( &lt;lfs_s_fieldcatalog&gt;-row_pos ).
            lo_column-&gt;set_round( &lt;lfs_s_fieldcatalog&gt;-round ).
            lo_column-&gt;set_technical( &lt;lfs_s_fieldcatalog&gt;-tech ).
*           lo_column-&gt;set_alignment( &lt;lfs_s_fieldcatalog&gt;-just ).
            lo_column-&gt;set_tooltip( &lt;lfs_s_fieldcatalog&gt;-tooltip ).
            lo_column-&gt;set_quantity( &lt;lfs_s_fieldcatalog&gt;-quantity ).
            lo_column-&gt;set_optimized( &lt;lfs_s_fieldcatalog&gt;-col_opt ).
            lo_column-&gt;set_decimals( &lt;lfs_s_fieldcatalog&gt;-decimals_o ).
            lo_column-&gt;set_currency( &lt;lfs_s_fieldcatalog&gt;-currency ).
            lo_column-&gt;set_leading_zero( &lt;lfs_s_fieldcatalog&gt;-lzero ).
            lo_column-&gt;set_lowercase( &lt;lfs_s_fieldcatalog&gt;-lowercase ).
            lo_column-&gt;set_edit_mask( &lt;lfs_s_fieldcatalog&gt;-edit_mask ).
            lo_column-&gt;set_long_text( &lt;lfs_s_fieldcatalog&gt;-scrtext_l ).
            lo_column-&gt;set_short_text( &lt;lfs_s_fieldcatalog&gt;-scrtext_s ).
            lo_column-&gt;set_f1_rollname( &lt;lfs_s_fieldcatalog&gt;-rollname ).
            lo_column-&gt;set_medium_text( &lt;lfs_s_fieldcatalog&gt;-scrtext_m ).
*           lo_column-&gt;set_leading_spaces( &lt;lfs_s_fieldcatalog&gt;-lspace ).
            lo_column-&gt;set_round_column( &lt;lfs_s_fieldcatalog&gt;-roundfield ).
            lo_column-&gt;set_output_length( &lt;lfs_s_fieldcatalog&gt;-outputlen ).
            lo_column-&gt;set_currency_column( &lt;lfs_s_fieldcatalog&gt;-cfieldname ).
            lo_column-&gt;set_quantity_column( &lt;lfs_s_fieldcatalog&gt;-qfieldname ).
            lo_column-&gt;set_decimals_column( &lt;lfs_s_fieldcatalog&gt;-decmlfield ).
            lo_column-&gt;set_fixed_header_text( &lt;lfs_s_fieldcatalog&gt;-fix_column ).
            lo_column-&gt;set_decfloat_style( &lt;lfs_s_fieldcatalog&gt;-decfloat_style ).
            lo_column = lo_columns-&gt;get_column( &lt;lfs_s_fieldcatalog&gt;-fieldname ).
            lo_column-&gt;set_sign( boolc( &lt;lfs_s_fieldcatalog&gt;-no_sign EQ abap_false ) ).
            lo_column-&gt;set_zero( boolc( &lt;lfs_s_fieldcatalog&gt;-no_zero EQ abap_false ) ).
            lo_column-&gt;set_visible( boolc( &lt;lfs_s_fieldcatalog&gt;-no_out EQ abap_false ) ).

          CATCH : cx_salv_not_found, cx_salv_data_error.
            &quot; Une erreur est survenue
            &quot;&quot;  --&gt; Tant pis ...

        ENDTRY.

        CLEAR : lo_column.

      ENDLOOP.

    CATCH cx_root.
      &quot; Une erreur est survenue

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="FILTER_LVC_TO_SALV" VERSION="1" LANGU="F" DESCRIPT="Filtre LVC -&gt; SALV" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="FILTER_LVC_TO_SALV" SCONAME="IT_FILTERS" VERSION="1" LANGU="F" DESCRIPT="Contrôle ALV : table des conditions de filtrage" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LVC_T_FILT"/>
   <parameter CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="FILTER_LVC_TO_SALV" SCONAME="CO_SALV_TABLE" VERSION="1" LANGU="F" DESCRIPT="Basis Class for Simple Tables" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_SALV_TABLE"/>
   <source>METHOD filter_lvc_to_salv.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_filters TYPE REF TO cl_salv_filters.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Application des Filtres
      &quot; -----------------------------------------------------------

      &quot; Récupération instance de Filtre
      lo_filters = co_salv_table-&gt;get_filters( ).

      &quot; Applique le(s) Filtre(s)
      LOOP AT it_filters ASSIGNING FIELD-SYMBOL(&lt;lfs_s_filters&gt;).

        TRY.
            &quot; Ajout du Filtre
            lo_filters-&gt;add_filter(
                low        = &lt;lfs_s_filters&gt;-low
                high       = &lt;lfs_s_filters&gt;-high
                sign       = &lt;lfs_s_filters&gt;-sign
                option     = &lt;lfs_s_filters&gt;-option
                columnname = &lt;lfs_s_filters&gt;-fieldname
            ).

          CATCH : cx_salv_not_found, cx_salv_existing, cx_salv_data_error.

        ENDTRY.

      ENDLOOP.

    CATCH cx_root.
      &quot; Erreur survenue
      &quot;&quot;  --&gt; Tant pis ...

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="SORT_LVC_TO_SALV" VERSION="1" LANGU="F" DESCRIPT="Tri LVC -&gt; SALV" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="SORT_LVC_TO_SALV" SCONAME="IT_SORT" VERSION="1" LANGU="F" DESCRIPT="Contrôle arbre ALV : table des critères de tri" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LVC_T_SORT"/>
   <parameter CLSNAME="ZCL_SALV_UTILITIES" CMPNAME="SORT_LVC_TO_SALV" SCONAME="CO_SALV_TABLE" VERSION="1" LANGU="F" DESCRIPT="Basis Class for Simple Tables" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_SALV_TABLE"/>
   <source>METHOD sort_lvc_to_salv.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_sorts TYPE REF TO cl_salv_sorts.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Application des Tris
      &quot; -----------------------------------------------------------

      &quot; Récupération instance de Tri
      lo_sorts = co_salv_table-&gt;get_sorts( ).

      &quot; Applique le(s) Tri(s)
      LOOP AT it_sort ASSIGNING FIELD-SYMBOL(&lt;lfs_s_sort&gt;).

        TRY.
            &quot; Ajout du Tri
            lo_sorts-&gt;add_sort(
                group      = SWITCH #( &lt;lfs_s_sort&gt;-group
                  WHEN abap_true                                 THEN if_salv_c_sort=&gt;group_none
                  WHEN &apos;*&apos;                                       THEN if_salv_c_sort=&gt;group_with_newpage
                  WHEN cl_pssc00_gen_const_ui=&gt;c_group_underline THEN if_salv_c_sort=&gt;group_with_underline
                  ELSE if_salv_c_sort=&gt;group_none
                )
                position   = CONV #( &lt;lfs_s_sort&gt;-spos )
                sequence   = SWITCH #( &lt;lfs_s_sort&gt;-up
                  WHEN abap_true THEN if_salv_c_sort=&gt;sort_up
                  ELSE if_salv_c_sort=&gt;sort_down
                )
                subtotal   = &lt;lfs_s_sort&gt;-subtot
                columnname = &lt;lfs_s_sort&gt;-fieldname
                obligatory = &lt;lfs_s_sort&gt;-obligatory
            ).

          CATCH : cx_salv_not_found, cx_salv_existing, cx_salv_data_error.

        ENDTRY.

      ENDLOOP.

    CATCH cx_root.
      &quot; Erreur survenue
      &quot;&quot;  --&gt; Tant pis ...

  ENDTRY.

ENDMETHOD.</source>
  </method>
 </CLAS>
</nugget>
